.cta-banner {
    position: relative;
    padding: $section-padding;
    overflow: hidden;
    // min-height: 250px; // or any height suitable for your section

    .emoji-bg {
        position: absolute;
        inset: 0;
        z-index: 0;

        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        grid-auto-rows: 120px;
        gap: 60px; // increased gap for better spread
        justify-items: center;
        align-items: center;
        padding: 40px;
        pointer-events: none;

        span {
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            opacity: 0.62;
            transform: rotate(var(--angle, 0deg));
            animation: bounceAround var(--duration, 3s) ease-in-out infinite;
            animation-delay: var(--delay, 0s);
        }

        // Random variations
        span:nth-child(3n) {
            --angle: 10deg;
            --duration: 6.8s;
            --delay: 0.1s;
        }

        span:nth-child(4n) {
            --angle: -15deg;
            --duration: 7.2s;
            --delay: 0.3s;
        }

        span:nth-child(5n) {
            --angle: 25deg;
            --duration: 6.5s;
            --delay: 0.5s;
        }

        span:nth-child(6n) {
            --angle: -10deg;
            --duration: 7s;
            --delay: 0.2s;
        }

        span:nth-child(odd) {
            --angle: 18deg;
            --duration: 6.7s;
            --delay: 0.4s;
        }

        span:nth-child(even) {
            --angle: -20deg;
            --duration: 7.3s;
            --delay: 0.6s;
        }

    }

    @keyframes bounceAround {
        0% {
            transform: translate(0, 0) rotate(var(--angle, 0deg));
        }

        25% {
            transform: translate(60px, -60px) rotate(calc(var(--angle) + 10deg));
        }

        50% {
            transform: translate(-80px, 80px) rotate(calc(var(--angle) - 15deg));
        }

        75% {
            transform: translate(50px, 50px) rotate(calc(var(--angle) + 5deg));
        }

        100% {
            transform: translate(0, 0) rotate(var(--angle, 0deg));
        }
    }

    .cta-container {
        position: relative;
        z-index: 1;
        display: flex; // ✅ Add Flexbox layout
        justify-content: space-between;
        align-items: center;
        gap: 2rem;

        @include small {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.75rem;
        }
    }

    .cta-text {
        flex: 1 1 60%;

        .cta-heading {
            font-size: 2rem;
            font-weight: bold;
            // color: $color-text-white;
            margin-bottom: 0.5rem;
        }

        .cta-subtext {
            font-size: 1.125rem;
            // color: lighten($color-text-white, 10%);
        }
    }

    .cta-action {
        flex: 1 1 auto;
        text-align: right;

        a {
            margin-left: 1rem;

            @include small {
                margin-left: 0;
                margin-right: 1rem;
            }
        }

        .btn-cta {
            display: inline-block;
            padding: 0.75rem 2rem;
            font-size: 1rem;
            border-radius: 2rem;
            text-decoration: none;
            transition: background 0.3s ease, color 0.3s ease;

            &.primary {
                background-color: $color-secondary; // Raspberry
                color: $color-text-white;

                &:hover {
                    background-color: darken($color-secondary, 10%);
                }
            }

            &.secondary {
                background-color: $color-accent;
                border: 2px solid $color-text-white;
                color: $color-text-white;

                &:hover {
                    background-color: darken($color-accent, 10%);
                    color: $color-text-white;
                }
            }
        }

        @include small {
            text-align: left;
            width: 100%;
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            margin-top: 0.25rem;

            .btn-cta {
                flex: 1 1 0;
                text-align: center;
            }
        }
    }

    @include small {
        .cta-container {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.75rem; // ✅ slightly tighter spacing between text and action
        }
    }


}